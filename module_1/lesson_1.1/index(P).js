function isPrime(number) {
    // Задание №1. Напишите функцию isPrime, которая получает на вход число
    // и возвращает true если число ПРОСТОЕ и false если число СОСТАВНОЕ или 1
    // Пожалуйста, не гуглите решение задания
    //Замените код ниже на ваш код
    if (number === 1) {
        return false;
    }
    else {
        for (var i = number - 1; i > 1; i--) {
            if (number % i === 0) {
                return false;
            }
        }
        return true;
    }
}

function generateTable() {
    // Задание №2. Напишите функцию generateTable, которая генерирует на выходе
    // таблицу умножения от 1 до 9. Другими словами результат должен выглядеть так:
    // (одной строкой, со вставленными переносами строк)
    //
    //  1  2  3  4  5  6  7  8  9
    //  2  4  6  8 10 12 14 16 18
    //  3  6  9 12 15 18 21 24 27
    //  4  8 12 16 20 24 28 32 36
    //  5 10 15 20 25 30 35 40 45
    //  6 12 18 24 30 36 42 48 54
    //  7 14 21 28 35 42 49 56 63
    //  8 16 24 32 40 48 56 64 72
    //  9 18 27 36 45 54 63 72 81
    //
    // Обратите внимание на ПРОБЕЛЫ, которые вставлены перед числами меньше 10 чтоб таблица смотрелась красиво
    // Конечно же взять и "забить" эту таблицу в JS - не то решение, которое я от Вас жду
    // Пожалуйста, не гуглите решение задания
    //Замените код ниже на ваш

    var result, str = '';
    for (var i = 1; i <= 9; i++) {
        for (var j = 1; j <= 9; j++) {
            result = i * j;
            if (result <= 9) {
                str = (str + " " + result.toString() + " ");
            }
            else {
                str = (str + result.toString() + " ");
            }
        }
        str += '\n';
    }
    return str;
}

function reverse(str) {
    // Задание №3. Напишите функцию reverse которая получает на вход строку и переворачивает ее
    // Пожалуйста, не гуглите решение задания
    // Для особо умных: функцией reverse массива пользоваться запрещено
    //Замените код ниже на ваш код

    var strReverse = "";
    for (var i = str.length; i >= 0; i--) {
        strReverse += str.substr(i, 1);
    }
    return strReverse;
}

function biggestPrimePalindrome(size) {
    // Задание №4. Самое сложное. Если вы только пришли в мир JS и не успеете решить его до субботы - не расстраивайтесь.
    // Но очень постарайтесь :)
    // Вам подается на вход в size длина числа. Ваша задача найти МАКСИМАЛЬНОЕ простое число-палиндром заданной длины
    // (палиндром - строка которая читается задом наперед так же как и передом назад :))
    // К примеру size = 3. Простыми Числами палиндромами будут 101, 121, 131 и т.д. Ответом (результатом) будет 929 -
    // последнее простое трехзначное число палиндром
    // Пожалуйста, не гуглите решение задания
    // Конечно же вы можете использовать функции isPrime и reverse написанные выше
    // Не передавайте size больше 10 - ваш компьютер уж очень крепко задумается
    // Код этой функции я хочу увидеть, когда вы решите эту задачу
    // Скопируйте код функции, откройте gist.github.com, вставьте его туда
    // В поле имени файла введите index_ZenGarden.js
    // Нажмите "create secret gist"
    // Получившуюся ссылку (взять из адресной строки), пришлите мне с почты, на которую вы получили это задание
    // на illya@smartjs.academy с темой письма
    // Basic#1
    //Замените код ниже на ваш код

    if (size <= 1 || size >= 10) {
        return false;
    }

    var str = "";
    var numbermax = Math.pow(10, size);
    var numbermin = Math.pow(10, size - 1);
    for (var n = numbermax; n > numbermin; n--) {
        if (isPrime(n) === true) {
            str = n.toString();
            if (str === reverse(str)) {
                return n;
            }
        }
    }
    return false;
}

//Done